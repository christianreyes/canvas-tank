Function.prototype.inheritsFrom=function(a){a.constructor==Function?(this.prototype=new a,this.prototype.constructor=this,this.prototype.parent=a.prototype):(this.prototype=a,this.prototype.constructor=this,this.prototype.parent=a);return this};function mergeObjects(a,b){var c={},d;for(d in a)c[d]=a[d];for(d in b)c[d]=b[d];return c}function mergeWithDefault(a,b){var c=defaultIfUndefined(a,b);return c=mergeObjects(b,a)}function defaultIfUndefined(a,b){return typeof a=="undefined"?b:a}
function Doodle(a){this.context=a;this.children=[]}Doodle.prototype.draw=function(){for(var a=0;a<this.children.length;a++)this.context.save(),this.children[a].draw(this.context),this.context.restore()};function Drawable(a){a=mergeWithDefault(a,{left:0,top:0,visible:true,theta:0});this.left=a.left;this.top=a.top;this.visible=a.visible;this.theta=a.theta}Drawable.prototype.draw=function(){console.log("ERROR: Calling unimplemented draw method on drawable object.")};
function Primitive(a){a=mergeWithDefault(a,{lineWidth:1,color:"black"});Drawable.call(this,a);this.lineWidth=a.lineWidth;this.color=a.color}Primitive.inheritsFrom(Drawable);function Text(a){a=mergeWithDefault(a,{content:"",fill:"black",font:"12pt Helvetica",height:12});Drawable.call(this,a);this.content=a.content;this.fill=a.fill;this.font=a.font;this.height=a.height}Text.inheritsFrom(Drawable);
Text.prototype.draw=function(a){a.fillStyle=this.fill;a.font=this.font;a.fillText(this.content,this.left,this.height)};function DoodleImage(a){a=mergeWithDefault(a,{width:-1,height:-1,src:""});Drawable.call(this,a);this.width=a.width;this.height=a.height;this.src=a.src}DoodleImage.inheritsFrom(Drawable);DoodleImage.prototype.draw=function(a){var b=new Image,c=this.left,d=this.top,e=this.width,f=this.height;b.src=this.src;e!=-1&&f!=-1?a.drawImage(b,c,d,e,f):a.drawImage(b,c,d)};
function Line(a){a=mergeWithDefault(a,{startX:0,startY:0,endX:0,endY:0,lineWidth:1});Primitive.call(this,a);this.startX=a.startX;this.startY=a.startY;this.endX=a.endX;this.endY=a.endY;this.lineWidth=a.lineWidth}Line.inheritsFrom(Primitive);Line.prototype.draw=function(a){a.beginPath();if(typeof this.lineWidth!="undefined")a.lineWidth=this.lineWidth;if(typeof this.color!="undefined")a.strokeStyle=this.color;a.moveTo(this.startX,this.startY);a.lineTo(this.endX,this.endY);a.closePath();a.stroke()};
function Path(a){a=mergeWithDefault(a,{type:"straight",points:[],fill:""});Primitive.call(this,a);this.type=a.type;this.points=a.points;this.fill=a.fill}Path.inheritsFrom(Primitive);
Path.prototype.draw=function(a){if(this.points.length>0){a.beginPath();a.moveTo(this.points[0].x,this.points[0].y);if(typeof this.lineWidth!="undefined")a.lineWidth=this.lineWidth;if(typeof this.color!="undefined")a.strokeStyle=this.color;if(this.fill!="")a.fillStyle=this.fill;switch(this.type){case "straight":for(var b=1;b<this.points.length;b++){var c=this.points[b];a.lineTo(c.x,c.y)}break;case "quadratic":for(b=1;b<this.points.length;b++)c=this.points[b],a.quadraticCurveTo(c.cp1x,c.cp1y,c.x,c.y);
break;case "bezier":for(b=1;b<this.points.length;b++)c=this.points[b],a.bezierCurveTo(c.cp1x,c.cp1y,c.cp2x,c.cp2y,c.x,c.y)}this.fill!=""?a.fill():a.stroke()}};
function Arc(a){a=mergeWithDefault(a,{centerX:0,centerY:0,radius:0,startingTheta:0,endingTheta:0,counterclockwise:false});Primitive.call(this,a);this.centerX=a.centerX;this.centerY=a.centerY;this.radius=a.radius;this.startingTheta=a.startingTheta;this.endingTheta=a.endingTheta;this.counterclockwise=a.counterclockwise;this.left=a.centerX-a.radius;this.top=a.centerY-a.radius}Arc.inheritsFrom(Primitive);
Arc.prototype.draw=function(a){a.beginPath();if(typeof this.lineWidth!="undefined")a.lineWidth=this.lineWidth;if(typeof this.color!="undefined")a.strokeStyle=this.color;a.arc(this.centerX,this.centerY,this.radius,this.startingTheta,this.endingTheta,this.counterclockwise);a.stroke()};
function Container(a){a=mergeWithDefault(a,{width:100,height:100,fill:"",borderColor:"black",borderWidth:0});Drawable.call(this,a);this.children=[];this.width=a.width;this.height=a.height;this.fill=a.fill;this.borderColor=a.borderColor;this.borderWidth=a.borderWidth}Container.inheritsFrom(Drawable);
Container.prototype.draw=function(a){a.save();if(this.borderWidth!=0)a.lineWidth=this.borderWidth;a.translate(this.left,this.top);a.rotate(this.theta);a.beginPath();a.moveTo(0,0);a.lineTo(this.width,0);a.lineTo(this.width,this.height);a.lineTo(0,this.height);a.lineTo(0,0);a.closePath();if(this.fill!="")a.fillStyle=this.fill,a.fill();this.borderWidth!=0&&a.stroke();a.clip();for(var b=0;b<this.children.length;b++){var c=this.children[b];a.save();c.draw(a);a.restore()}a.restore()};
function PolygonContainer(a){a=mergeWithDefault(a,{radius:100,sides:3,centerX:100,centerY:100,polygonTheta:0});Container.call(this,a);this.radius=a.radius;this.sides=a.sides;this.centerX=a.centerX;this.centerY=a.centerY;this.polygonTheta=a.polygonTheta;this.left=a.centerX-a.radius;this.top=a.centerY-a.radius}PolygonContainer.inheritsFrom(Container);
PolygonContainer.prototype.draw=function(a){a.save();if(this.borderWidth!=0)a.lineWidth=this.borderWidth;if(typeof this.borderColor!="undefined")a.strokeStyle=this.borderColor;if(typeof this.fill!="undefined")a.fillStyle=this.fill;a.save();a.translate(this.centerX,this.centerY);a.rotate(-this.polygonTheta);var b=360/this.sides*(Math.PI/180);a.beginPath();a.moveTo(this.radius,0);for(var c=1;c<=this.sides;c++){var d=b*c,e=this.radius*Math.cos(d),d=this.radius*Math.sin(d);a.lineTo(e,d)}a.closePath();
a.fill();a.stroke();a.clip();a.restore();a.save();a.translate(this.left,this.top);for(c=0;c<this.children.length;c++)b=this.children[c],a.save(),b.draw(a),a.restore();a.restore();a.restore()};
var _canvas_width=600,_canvas_height=600,x_pos=_canvas_width/2,y_pos=_canvas_height/2,_doodle=void 0,_circle=void 0,_arrow=void 0,_arrow_container=void 0,_time_step=10,_time_s_to_ms=_time_step/1E3,_gravity=4,_gravity_increment=_gravity*_time_s_to_ms,_x_per_sec=200,_y_per_sec=-4.5,_x_increment=_x_per_sec*_time_s_to_ms,_y_increment=_y_per_sec*_time_s_to_ms;
window.onload=function(){var a=document.getElementById("canvas"),b=a.getContext("2d");a.width=_canvas_width;a.height=_canvas_height;_doodle=new Doodle(b);_circle=new Arc({centerX:_canvas_width/2,centerY:_canvas_height/2,lineWidth:3,radius:10,startingTheta:0,endingTheta:Math.PI*2});_arrow_container=new Container({width:25,height:20,left:0,top:_canvas_width/2,borderWidth:0});var b=new Line({startX:6,startY:10,endX:20,endY:10,lineWidth:1}),c=new Path({color:"black",fill:"black",lineWidth:1,type:"straight",
points:[{x:20,y:10},{x:17,y:7},{x:17,y:13}]}),d=new Path({color:"black",lineWidth:1,type:"straight",points:[{x:2,y:8},{x:6,y:10},{x:2,y:12}]});_arrow_container.children=[d,b,c];_arrow=new Line({startX:0,startY:_canvas_width/2,endX:10,endY:_canvas_height/2-2});_doodle.children=[_arrow_container];_doodle.draw();a.addEventListener("mousemove",function(b){canvasMouseMove(a,b)});setInterval(updateAndDraw,_time_step)};
function canvasMouseMove(a,b){var c=a.getBoundingClientRect();_x_pos=(b.clientX-c.left)*(a.width/c.width);_y_pos=(b.clientY-c.top)*(a.width/c.width)}function updateAndDraw(){_doodle.context.clearRect(0,0,_canvas_width,_canvas_height);fallingArrow(_x_per_sec,_y_per_sec);_doodle.draw()}
function fallingArrow(){if(_arrow_container.top<_canvas_height){_y_per_sec+=_gravity_increment;var a=_arrow_container.left,b=_arrow_container.top,a=Math.atan((b+_y_per_sec-b)/(a+_x_increment-a));_arrow_container.left+=_x_increment;_arrow_container.top+=_y_per_sec;_arrow_container.theta=a}else _arrow_container.left=0,_arrow_container.top=_canvas_width/2,_y_per_sec=-4.5}
function fallingLine(){_arrow.startY<_canvas_height?(_y_per_sec+=_gravity_increment,_arrow.startX+=_x_increment,_arrow.endX+=_x_increment,_arrow.startY=_arrow.endY-_y_per_sec,_arrow.endY+=_y_per_sec):(_arrow.startX=0,_arrow.startY=_canvas_width/2,_arrow.endX=10,_arrow.endY=_canvas_width/2-2,_y_per_sec=-5)};